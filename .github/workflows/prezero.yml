---
# This workflow integrates qwiet.ai preZero with GitHub
# Visit https://docs.shiftleft.io for help
name: qwietaifix

on:
  pull_request:
  workflow_dispatch:
  #schedule:
    # * is a special character in YAML so you have to quote this string
    #- cron: '0 11 * * 6'

jobs:
  NextGen-Static-Analysis:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Setup Java JDK v11
      uses: actions/setup-java@v3
      with:
        distribution: zulu
        java-version: 11

    - name: Install Conan
      run: |
        pip install conan
        conan profile detect

    - name: Install vcpkg
      run: |
        git clone https://github.com/microsoft/vcpkg.git 
        chmod +x ./vcpkg/bootstrap-vcpkg.sh  # Ensure the script is executable
        ./vcpkg/bootstrap-vcpkg.sh
        echo "VCPKG_ROOT=$GITHUB_WORKSPACE/vcpkg" >> $GITHUB_ENV
        # Install dependencies using vcpkg manifest mode (vcpkg.json)
        ./vcpkg install --manifest $GITHUB_WORKSPACE/vcpkg.json


    - name: Generate conanfile.txt from vcpkg
      run: |
        echo "[requires]" > conanfile.txt
        ./vcpkg/vcpkg list | awk '{print $1"/latest"}' >> conanfile.txt
        echo -e "\n[generators]\nCMakeDeps\nCMakeToolchain" >> conanfile.txt

    - name: Run Conan Install with vcpkg
      run: |
        conan install . --build=missing --output-folder=conan_build

    - name: Install compiledb
      run: |
        pip install compiledb

    - name: Generate Compilation Database using Make and compiledb
      run: |
        compiledb make

    - name: Install make, g++, and build essentials
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake g++ gcc

    - name: Configure CMake with Makefiles
      run: |
        cmake -S . -B build -G "Unix Makefiles"  # Explicitly set Unix Makefiles generator

    - name: Download ShiftLeft CLI
      run: |
        curl https://cdn.shiftleft.io/download/sl > ${GITHUB_WORKSPACE}/sl && chmod a+rx ${GITHUB_WORKSPACE}/sl

    - name: preZero Static Analysis
      run: |
        ${GITHUB_WORKSPACE}/sl --version
        ${GITHUB_WORKSPACE}/sl analyze --strict --wait --verbose \
          --app C-test-App \
          --tag branch=${{ github.head_ref }} --c .
      env:
        SHIFTLEFT_ACCESS_TOKEN: ${{ secrets.SHIFTLEFT_ACCESS_TOKEN }}
        SHIFTLEFT_API_HOST: www.shiftleft.io
        SHIFTLEFT_GRPC_TELEMETRY_HOST: telemetry.shiftleft.io:443
        SHIFTLEFT_GRPC_API_HOST: api.shiftleft.io:443
