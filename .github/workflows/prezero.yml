name: qwietaifix

on:
  pull_request:
  workflow_dispatch:

jobs:
  NextGen-Static-Analysis:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    # Set up Java JDK v11
    - name: Setup Java JDK v11
      uses: actions/setup-java@v3
      with:
        distribution: zulu
        java-version: 11

    # Set up C++ environment and dependencies
    - name: Install C++ dependencies
      run: |
        sudo apt-get update
        sudo apt-get remove -y libopencl-clang-x.y-dev python-clang-x.y || true
        sudo apt-get install -f -y
        sudo apt-get install -y build-essential g++ clang-14 cmake make ninja-build

    # Install Conan
    - name: Install Conan
      run: |
        pip install conan
        conan profile detect

    # Configure Conan Remotes with --force
    - name: Configure Conan Remotes
      run: |
        conan remote add conancenter https://center.conan.io --force
        conan remote add bincrafters https://bincrafters.jfrog.io/artifactory/api/conan/public-conan --force
        conan remote list

    # Install vcpkg
    - name: Install vcpkg
      run: |
        git clone https://github.com/microsoft/vcpkg.git
        cd vcpkg
        ./bootstrap-vcpkg.sh
        echo "VCPKG_ROOT=$GITHUB_WORKSPACE/vcpkg" >> $GITHUB_ENV
        echo "VCPKG_DISABLE_METRICS=1" >> $GITHUB_ENV

    # Ensure vcpkg.json exists
    - name: Ensure vcpkg.json exists
      run: |
        if [ ! -f vcpkg.json ]; then
          echo '{ "name": "dummy-project", "version": "1.0", "dependencies": [] }' > vcpkg.json
        fi

    # Run vcpkg install
    - name: Run vcpkg install
      run: |
        ./vcpkg/vcpkg install --triplet x64-linux

    # Generate conanfile.txt from vcpkg
    - name: Generate conanfile.txt from vcpkg
      run: |
        echo "[requires]" > conanfile.txt
        ./vcpkg/vcpkg list | grep -v "fmt" | awk '{print $1"/latest"}' >> conanfile.txt
        echo "fmt/10.1.1" >> conanfile.txt
        echo -e "\n[generators]\nCMakeDeps\nCMakeToolchain" >> conanfile.txt

    # Manually install missing package (vcpkg-cmake-config)
    - name: Install vcpkg-cmake-config manually
      run: |
        conan install vcpkg-cmake-config/0.1@ --build=missing || echo "vcpkg-cmake-config already installed"

    # Run Conan Install with all dependencies
    - name: Run Conan Install
      run: |
        conan install . --build=missing --output-folder=conan_build

    # Install compiledb
    - name: Install compiledb
      run: |
        pip install compiledb

    # Generate Compilation Database using Make and compiledb
    - name: Generate Compilation Database using Make and compiledb
      run: |
        compiledb make

    # Configure CMake with Makefiles
    - name: Configure CMake with Makefiles
      run: |
        cmake -G "Unix Makefiles" -DCMAKE_MAKE_PROGRAM=/usr/bin/make -DCMAKE_C_COMPILER=clang-14 -DCMAKE_CXX_COMPILER=clang++-14 ..

    # Download ShiftLeft CLI
    - name: Download ShiftLeft CLI
      run: |
        curl https://cdn.shiftleft.io/download/sl > ${GITHUB_WORKSPACE}/sl && chmod a+rx ${GITHUB_WORKSPACE}/sl

    # Run preZero Static Analysis
    - name: preZero Static Analysis
      run: |
        ${GITHUB_WORKSPACE}/sl --version
        ${GITHUB_WORKSPACE}/sl analyze --strict --wait --verbose \
          --app C-test-App \
          --tag branch=${{ github.head_ref }} --c .
      env:
        SHIFTLEFT_ACCESS_TOKEN: ${{ secrets.SHIFTLEFT_ACCESS_TOKEN }}
        SHIFTLEFT_API_HOST: www.shiftleft.io
        SHIFTLEFT_GRPC_TELEMETRY_HOST: telemetry.shiftleft.io:443
        SHIFTLEFT_GRPC_API_HOST: api.shiftleft.io:443
